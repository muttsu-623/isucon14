version: '3'

vars:
  NGINX_LOG: /var/log/nginx/access.log
  DB_SLOW_LOG: /var/log/mysql/mysql-slow.log
  SERVICE_BINARY_NAME: isuride
  # Alp sort type. 他にavg, countなど.
  SORT_TYPE: '{{.SORT_TYPE | default "max"}}'
  PPROF_FILE: '{{.PPROF_FILE}}'
tasks:
  install-pt-query-digest:
    cmds:
      - mkdir -p ~/tools
      - cd ~/tools && wget https://github.com/percona/percona-toolkit/archive/refs/tags/v3.6.0.tar.gz
      - cd ~/tools && tar zxvf v3.6.0.tar.gz
      - ~/tools/percona-toolkit-3.6.0/bin/pt-query-digest --version
      - sudo install ~/tools/percona-toolkit-3.6.0/bin/pt-query-digest /usr/local/bin

  install-unzip:
    cmds:
      - sudo apt update
      - sudo apt install -y unzip
    status:
      - which unzip

  install-alp:
    deps: [install-unzip]
    cmds:
      - wget https://github.com/tkuchiki/alp/releases/download/v1.0.9/alp_linux_amd64.zip
      - unzip alp_linux_amd64.zip
      - sudo install alp /usr/local/bin/alp
      - rm alp_linux_amd64.zip alp
    status:
      - test -f /usr/local/bin/alp

  # ベンチマークを回す前に実行するログローテーションと再起動
  bench:
    cmds:
      - task mv-logs
      - task restart
      - task build
      - sudo systemctl restart isuride-go.service
      - task pprof-record

  restart:
    cmds:
      - sudo systemctl restart mysql
      - sudo systemctl restart nginx

  build:
    dir: webapp/go/
    cmds:
      - LINUX_TARGET_ENV=GOOS=linux GOARCH=amd64 go build -o {{.SERVICE_BINARY_NAME}}

  mv-logs:
    vars:
      TIMESTAMP:
        sh: date "+%Y-%m-%dT%H:%M:%S"
    cmds:
      - mkdir -p ~/logs/{{.TIMESTAMP}}
      - |
        if [ -f {{.NGINX_LOG}} ]; then
          sudo mv -f {{.NGINX_LOG}} ~/logs/{{.TIMESTAMP}}/
        else
          echo ""
        fi
      - |
        if [ -f {{.DB_SLOW_LOG}} ]; then
          sudo mv -f {{.DB_SLOW_LOG}} ~/logs/{{.TIMESTAMP}}/
        else
          echo ""
        fi

  slow-select:
    cmds:
      - sudo pt-query-digest {{.DB_SLOW_LOG}}  --filter '$event->{arg} =~ m/^select/i'

  slow-except-long:
    cmds:
      - sudo pt-query-digest {{.DB_SLOW_LOG}}  --filter 'length($event->{arg}) <= 2000'


  alp:
    cmds:
      - |
        sudo cat /var/log/nginx/access.log | alp ltsv -m "\
        /api/chair/rides/[0-9A-Z]+/status,\
        /api/app/rides/[0-9A-Z]+/evaluation,\
        /api/chair/rides/[0-9A-Z]+/coordinate,\
        /api/app/rides/[0-9A-Z]+/estimated-fare,\
        /assets/route-[a-zA-Z0-9]+\.js,\
        /assets/[a-zA-Z0-9-]+-[a-zA-Z0-9]+\.js,\
        /assets/[a-zA-Z0-9-]+-[a-zA-Z0-9]+\.css,\
        /images/[a-zA-Z0-9-]+\.svg,\
        /images/[a-zA-Z0-9-]+\.png" \
        --sort {{.SORT_TYPE}} -r

# pprofで記録する
  pprof-record:
    dir: webapp/go/
    cmds:
      - go tool pprof http://localhost:6060/debug/pprof/profile?seconds=60

# pprofで確認する
  pprof-check:
    cmds:
      - latest=$(ls -rt pprof/ | tail -n 1)
      - go tool pprof -http=localhost:6070 {{.PPROF_FILE}}


